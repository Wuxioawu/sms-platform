<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peng.sms.mapper.SmsUserMapper">
  <resultMap id="BaseResultMap" type="com.peng.sms.entity.SmsUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="extend1" jdbcType="VARCHAR" property="extend1" />
    <result column="extend2" jdbcType="VARCHAR" property="extend2" />
    <result column="extend3" jdbcType="VARCHAR" property="extend3" />
    <result column="extend4" jdbcType="VARCHAR" property="extend4" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, salt, nickname, created, create_id, updated, update_id, 
    is_delete, extend1, extend2, extend3, extend4
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sms_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sms_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.peng.sms.entity.SmsUser" useGeneratedKeys="true">
    insert into sms_user (username, `password`, salt, 
      nickname, created, create_id, 
      updated, update_id, is_delete, 
      extend1, extend2, extend3, 
      extend4)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{createId,jdbcType=BIGINT}, 
      #{updated,jdbcType=TIMESTAMP}, #{updateId,jdbcType=BIGINT}, #{isDelete,jdbcType=TINYINT}, 
      #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR}, 
      #{extend4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.peng.sms.entity.SmsUser" useGeneratedKeys="true">
    insert into sms_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="extend1 != null">
        extend1,
      </if>
      <if test="extend2 != null">
        extend2,
      </if>
      <if test="extend3 != null">
        extend3,
      </if>
      <if test="extend4 != null">
        extend4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="extend1 != null">
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null">
        #{extend3,jdbcType=VARCHAR},
      </if>
      <if test="extend4 != null">
        #{extend4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.peng.sms.entity.SmsUser">
    update sms_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="extend1 != null">
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null">
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
      <if test="extend4 != null">
        extend4 = #{extend4,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peng.sms.entity.SmsUser">
    update sms_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=BIGINT},
      updated = #{updated,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR},
      extend4 = #{extend4,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>